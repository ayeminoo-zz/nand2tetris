// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**(in=false, load=reset,out=out);
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    
    //get final  inc i
    Not(in=reset, out=notr);
    Not(in=load, out=notl);
    And(a=notr, b=notl, out=andnotrnotl);
    And(a=andnotrnotl, b=inc, out=i);

    //get final load l
    Or(a=reset, b=load, out=orlr);
    Or(a=orlr, b=inc, out=l);

    Not16(in[0]=reset[0], in[1]=reset[0], in[2]=reset[0], in[3]=reset[0], in[4]=reset[0], in[5]=reset[0], in[6]=reset[0], in[7]=reset[0], in[8]=reset[0], in[9]=reset[0], in[10]=reset[0], in[11]=reset[0], in[12]=reset[0], in[13]=reset[0], in[14]=reset[0], in[15]=reset[0], out=notr16);

    

    And16(a=in, b=notr16, out=andinnotr); 
    Mux16(a=andinnotr, b=afterAdd, sel=i, out=inBeforeRegister);

    Register(in=inBeforeRegister, load=l, out=finalOut);

    Inc16(in=finalOut, out=afterAdd);

    And16(a=true, b=finalOut, out=out);


}
