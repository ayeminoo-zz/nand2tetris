// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=true, sel=address[6..8], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    And(a=a, b=load, out=anda);
    And(a=b, b=load, out=andb);
    And(a=c, b=load, out=andc);
    And(a=d, b=load, out=andd);
    And(a=e, b=load, out=ande);
    And(a=f, b=load, out=andf);
    And(a=g, b=load, out=andg);
    And(a=h, b=load, out=andh);
    
    RAM64(in=in, load=anda, address=address[0..5], out=outa);
    RAM64(in=in, load=andb, address=address[0..5], out=outb);
    RAM64(in=in, load=andc, address=address[0..5], out=outc);
    RAM64(in=in, load=andd, address=address[0..5], out=outd);
    RAM64(in=in, load=ande, address=address[0..5], out=oute);
    RAM64(in=in, load=andf, address=address[0..5], out=outf);
    RAM64(in=in, load=andg, address=address[0..5], out=outg);
    RAM64(in=in, load=andh, address=address[0..5], out=outh);

    Mux8Way16(sel=address[6..8], a=outa, b=outb, c=outc, d=outd, e=oute, f=outf, g=outg, h=outh, out=out);
}